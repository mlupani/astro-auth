---
import AuthLayout from "@/layouts/AuthLayout.astro";

const cookieEmail = Astro.cookies.get('email')?.value || '';

---

<AuthLayout>
	<div class="flex justify-center self-center z-10">
		<div class="p-12 bg-white mx-auto rounded-2xl w-100">
			<div class="mb-4">
				<h3 class="font-semibold text-2xl text-gray-800">Sign In</h3>
				<p class="text-gray-500">Please sign in to your account.</p>
			</div>
			<form class="space-y-5">
				<div class="space-y-2">
					<label class="text-sm font-medium text-gray-700 tracking-wide"
						>Email</label
					>
					<input
						class="w-full text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
						placeholder="mail@gmail.com"
                        type="email"
						name="email"
						value={cookieEmail}
					/>
				</div>
				<div class="space-y-2">
					<label class="mb-5 text-sm font-medium text-gray-700 tracking-wide">
						Password
					</label>
					<input
						class="w-full content-center text-base px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-green-400"
						placeholder="Enter your password"
                        type="password"
						name="password"
					/>
				</div>
				<div class="flex items-center justify-between">
					<div class="flex items-center">
					  <input checked={!!cookieEmail} id="remember_me" name="remember_me" type="checkbox" class="h-4 w-4 bg-blue-500 focus:ring-blue-400 border-gray-300 rounded">
					  <label for="remember_me" class="ml-2 block text-sm text-gray-800">
						Recuerdame
					  </label>
					</div>
					<div class="text-sm">
					  <a href="/register" class="text-green-400 hover:text-green-500">
						¿No tienes cuenta?
					  </a>
					</div>
				  </div>
				<div>
					<button
						id="btn-submit"
						type="submit"
						class="disabled:bg-gray-300 w-full flex justify-center bg-green-400 hover:bg-green-500 text-gray-100 p-3 rounded-full tracking-wide font-semibold shadow-lg cursor-pointer transition ease-in duration-500"
					>
						Ingresar
					</button>

					<hr class="h-[10px] border-gray-300 m-2">

					<button
						id="btn-google"
						type="button"
						class="disabled:bg-gray-300 w-full flex justify-center bg-red-400 hover:bg-red-500 text-gray-100 p-3 rounded-full tracking-wide font-semibold shadow-lg cursor-pointer transition ease-in duration-500"
					>
						Ingresar con Google
					</button>
				</div>
			</form>
			<div class="pt-5 text-center text-gray-400 text-xs">
				<span>
					Copyright © 2021-{new Date().getFullYear()}
					<a
						href="https://codepen.io/uidesignhub"
						rel=""
						target="_blank"
						title="Ajimon"
						class="text-green hover:text-green-500">AJI</a
					></span
				>
			</div>
		</div>
	</div>
</AuthLayout>

<script>

	import { firebase } from "@/firebase/config";
import { actions } from "astro:actions";
	import { GoogleAuthProvider, signInWithPopup } from "firebase/auth";
	import Swal from "sweetalert2";

	const form = document.querySelector("form") as HTMLFormElement;
	const btnSubmit = document.querySelector("#btn-submit") as HTMLButtonElement;
	const btnGoogle = document.querySelector("#btn-google") as HTMLButtonElement;

	form.addEventListener("submit", async (e) => {
		e.preventDefault();

		btnSubmit.setAttribute("disabled", "disabled");
		btnSubmit.classList.remove("hover:bg-green-500");
		const formData = new FormData(form);
		const {data, error} = await actions.loginUser(formData);

		if(error){
			Swal.fire({
				title: 'Error!',
				text: error.message,
				icon: 'error',
				confirmButtonText: 'Aceptar'
			});

			btnSubmit.removeAttribute("disabled");
			btnSubmit.classList.add("hover:bg-green-500");
			return;
		}

		window.location.href = "/protected";
	});

	btnGoogle.addEventListener("click", async (e) => {
		e.preventDefault();

		btnGoogle.setAttribute("disabled", "disabled");
		btnGoogle.classList.remove("hover:bg-red-500");


		const provider = new GoogleAuthProvider();

		try {
			// paso 1: obtener las credenciales del lado del cliente
			const credentials = await signInWithPopup(firebase.auth, provider);

			// paso 2: enviar las credenciales al servidor
			const {data, error} = await actions.LoginGoogle(credentials);

			if(error){
				Swal.fire({
					title: 'Error!',
					text: error.message,
					icon: 'error',
					confirmButtonText: 'Aceptar'
				});

			btnGoogle.removeAttribute("disabled");
			btnGoogle.classList.add("hover:bg-red-500");
			return;
		}

		} catch (error) {
			btnGoogle.removeAttribute("disabled");
			btnGoogle.classList.add("hover:bg-red-500");
			console.log(error)
		}

		window.location.href = "/protected";
	});

</script>
